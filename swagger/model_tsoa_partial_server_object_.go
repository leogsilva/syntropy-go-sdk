/*
 * syntropy-controller
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * API version: 0.1.0
 * Generated by: Swagger Codegen (https://github.com/swagger-api/swagger-codegen.git)
 */
package swagger

type TsoaPartialServerObject_ struct {
	ServerName string `json:"server_name,omitempty"`
	RegionId float64 `json:"region_id,omitempty"`
	ServerPublicIpv4 string `json:"server_public_ipv4,omitempty"`
	ServerPublicIpv6 string `json:"server_public_ipv6,omitempty"`
	ServerConfigIpv4 string `json:"server_config_ipv4,omitempty"`
	ServerConfigIpv6 string `json:"server_config_ipv6,omitempty"`
	ServerIpv6Encaps string `json:"server_ipv6_encaps,omitempty"`
	ServerIpv6Start string `json:"server_ipv6_start,omitempty"`
	ServerIpv6End string `json:"server_ipv6_end,omitempty"`
	ServerIpv6Serialized []string `json:"server_ipv6_serialized,omitempty"`
	ServerGatewayIpv4 string `json:"server_gateway_ipv4,omitempty"`
	ServerGatewayIpv6 string `json:"server_gateway_ipv6,omitempty"`
	ProviderId float64 `json:"provider_id,omitempty"`
	TopologyId float64 `json:"topology_id,omitempty"`
	ServerSrSoftware *ServerSrSoftware `json:"server_sr_software,omitempty"`
	ServerIsTransit bool `json:"server_is_transit,omitempty"`
	ServerIsEdge bool `json:"server_is_edge,omitempty"`
	ServerStatus *Status `json:"server_status,omitempty"`
	ServerStatusReason string `json:"server_status_reason,omitempty"`
	ServerLocationLat float64 `json:"server_location_lat,omitempty"`
	ServerLocationLon float64 `json:"server_location_lon,omitempty"`
	ServerLocationCity string `json:"server_location_city,omitempty"`
	ServerProxyRequired bool `json:"server_proxy_required,omitempty"`
	ServerTapIpv4Cidr string `json:"server_tap_ipv4_cidr,omitempty"`
	ServerTapHostIpv4Cidr string `json:"server_tap_host_ipv4_cidr,omitempty"`
	ServerTapHostBridge string `json:"server_tap_host_bridge,omitempty"`
	ServerPublicTapHostIpv4 string `json:"server_public_tap_host_ipv4,omitempty"`
	ServerPublicTapVppIpv4 string `json:"server_public_tap_vpp_ipv4,omitempty"`
	ServerAgentStatus *ServerAgentStatus `json:"server_agent_status,omitempty"`
	ServerAgentKey string `json:"server_agent_key,omitempty"`
	VpnId float64 `json:"vpn_id,omitempty"`
	ServerSkipConfiguration bool `json:"server_skip_configuration,omitempty"`
}
